// <auto-generated />
using System;
using First.App.DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Homework04_First.App.DataAccess.EntityFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220327190055_UserTableAdded")]
    partial class UserTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("First.App.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kocaeli/İzmit",
                            City = "Kocaeli",
                            Country = "Türkiye",
                            CreatedAt = new DateTime(2022, 3, 27, 22, 0, 55, 131, DateTimeKind.Local).AddTicks(5639),
                            CreatedBy = "System",
                            Description = "Location bilgisi Güldür güldür Adana adliyesi skeçinden alınmıştır.",
                            IsDeleted = false,
                            Location = "Çarşı caddesi no:36, Camiyi geçince; dükkanın altıııı :)",
                            Name = "Tercanlar",
                            Phone = "0555 555 55 55"
                        },
                        new
                        {
                            Id = 2,
                            Address = "İstanbul/Beşiktaş",
                            City = "Kocaeli",
                            Country = "Türkiye",
                            CreatedAt = new DateTime(2022, 3, 27, 22, 0, 55, 132, DateTimeKind.Local).AddTicks(5964),
                            CreatedBy = "System",
                            Description = "Location bilgisi Güldür güldür Adana adliyesi skeçinden alınmıştır.",
                            IsDeleted = false,
                            Location = "Çarşı caddesi no:36, Camiyi geçince; dükkanın altıııı :) 2",
                            Name = "Tercanlar 2",
                            Phone = "0553 333 33 33"
                        });
                });

            modelBuilder.Entity("HomeWork04_First.App.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedAt = new DateTime(2022, 3, 27, 22, 0, 55, 134, DateTimeKind.Local).AddTicks(9003),
                            CreatedBy = "System",
                            Email = "malikoc2020@gmail.com",
                            IsDeleted = false,
                            Name = "Muhammet Ali",
                            Password = "",
                            Surname = "KOÇ"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            CreatedAt = new DateTime(2022, 3, 27, 22, 0, 55, 134, DateTimeKind.Local).AddTicks(9040),
                            CreatedBy = "System",
                            Email = "eric@gmail.com",
                            IsDeleted = false,
                            Name = "Eric",
                            Password = "",
                            Surname = "ADDAI"
                        });
                });

            modelBuilder.Entity("HomeWork04_First.App.Domain.Entities.User", b =>
                {
                    b.HasOne("First.App.Domain.Entities.Company", null)
                        .WithMany("User")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("First.App.Domain.Entities.Company", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
